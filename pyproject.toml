[project]
name = "jwst"
description = "Library for calibration of science observations from the James Webb Space Telescope"
requires-python = ">=3.10,<3.13"
authors = [
    { name = "JWST calibration pipeline developers" },
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Astronomy",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "asdf>=3.1.0,<4",
    "astropy>=5.3",
    "BayesicFitting>=3.0.1",
    "crds>=12.0.3",
    "drizzle>=2.0.0",
    "gwcs>=0.21.0,<0.23.0",
    "numpy>=1.22,<2.0",
    "opencv-python-headless>=4.6.0.66",
    "photutils>=1.5.0",
    "poppy>=1.0.2",
    "pyparsing>=2.2.1",
    "requests>=2.22",
    "scikit-image>=0.19",
    "scipy>=1.9.3",
    "spherical-geometry>=1.2.22",
    "stcal @ git+https://github.com/spacetelescope/stcal.git@main",
    "stdatamodels @ git+https://github.com/spacetelescope/stdatamodels.git@main",
    "stpipe @ git+https://github.com/spacetelescope/stpipe.git@main",
    "stsci.imagestats>=1.6.3",
    "synphot>=1.2",
    "tweakwcs>=0.8.8",
    "asdf-astropy>=0.3.0",
    "wiimatch>=0.2.1",
    "packaging>20.0",
    "importlib-metadata>=4.11.4",
    "jsonschema>=4.8",
]
dynamic = [
    "version",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
file = "LICENSE"
content-type = "text/plain"

[project.urls]
Homepage = "https://github.com/spacetelescope/jwst"
Tracker = "https://github.com/spacetelescope/jwst/issues"
Documentation = "https://jwst-pipeline.readthedocs.io/en/stable/"
"Source Code" = "https://github.com/spacetelescope/jwst"

[project.scripts]
adjust_wcs = "jwst.scripts.adjust_wcs:main"
asn_edit = "jwst.scripts.asn_edit:main"
asn_from_list = "jwst.associations.asn_from_list:main"
asn_gather = "jwst.scripts.asn_gather:main"
asn_generate = "jwst.associations.main:main"
asn_make_pool = "jwst.scripts.asn_make_pool:main"
collect_pipeline_cfgs = "jwst.scripts.collect_pipeline_cfgs:main"
create_data = "jwst.scripts.create_data:main"
csvconvert = "jwst.csv_tools.csvconvert:CSVConvertScript"
exp_to_source = "jwst.exp_to_source.main:Main"
okify_regtests = "jwst.scripts.okify_regtests:main"
pointing_summary = "jwst.scripts.pointing_summary:main"
schemadoc = "jwst.scripts.schemadoc:main"
set_telescope_pointing = "jwst.scripts.set_telescope_pointing:main"
"set_telescope_pointing.py" = "jwst.scripts.set_telescope_pointing:deprecated_name"
set_velocity_aberration = "jwst.scripts.set_velocity_aberration:main"
"set_velocity_aberration.py" = "jwst.scripts.set_velocity_aberration:deprecated_name"
v1_calculate = "jwst.scripts.v1_calculate:main"
verify_install_requires = "jwst.scripts.verify_install_requires:main"
world_coords = "jwst.scripts.world_coords:main"

[project.entry-points."stpipe.steps"]
jwst = "jwst.stpipe.integration:get_steps"

[project.entry-points.pytest11]
report_crds_context = "pytest_crds.plugin"

[project.optional-dependencies]
docs = [
    "matplotlib",
    "sphinx",
    "sphinx-astropy",
    "sphinx-automodapi",
    "sphinx-rtd-theme",
    "tomli; python_version <\"3.11\"",
]
sdp = [
    "jplephem>=2.9",
    "pysiaf>=0.13.0",
]
test = [
    "ci-watson>=0.5.0",
    "colorama>=0.4.1",
    "readchar>=3.0",
    "ruff",
    "pysiaf>=0.13.0",
    "pytest>=6.0.0",
    "pytest-cov>=2.9.0",
    "pytest-doctestplus>=0.10.0",
    "requests_mock>=1.0",
]

[build-system]
requires = [
    "setuptools>=61.2",
    "setuptools_scm[toml]>=3.4",
    "wheel",
    "numpy>=2.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false
include-package-data = false

[tool.setuptools.packages.find]
namespaces = false

[tool.setuptools.package-data]
"*" = [
    "*.asdf",
    "*.cfg",
    "tests/data/*.csv",
    "tests/data/*.ecsv",
    "tests/data/*.fits",
    "tests/data/**/*.fits",
    "*.json",
    "tests/data/*.json",
    "tests/data/**/*.json",
    "tests/data/*.txt",
    "*.yaml",
    "*.cat",
    "*.hdr",
]
"jwst.fits_generator" = [
    "templates/*.inc",
    "templates/*.txt",
    "tests/okfile/*.prop",
]
"jwst.lib" = [
    "tests/data/*.asdf",
    "tests/data/**/*.db",
    "tests/data/**/*.xml",
    "tests/data/*.ecsv",
    "tests/data/*.fits",
]
"jwst.associations" = [
    "tests/data/*.py",
]
"jwst.lib.src" = [
    "*.c",
]
"jwst.cube_build.src" = [
    "*.c",
]
"jwst.straylight.src" = [
    "*.c",
]
"jwst.transforms" = [
    "resources/schemas/stsci.edu/jwst_pipeline/*.yaml",
]
"jwst.stpipe.resources" = [
    "schemas/*.yaml",
]

[tool.build-sphinx]
source-dir = "docs"
build-dir = "docs"
all_files = "1"

[tool.distutils.upload_docs]
upload-dir = "docs/_build/html"
show-response = 1

[tool.pytest.ini_options]
minversion = "6.0"
norecursedirs = [
    "docs/_build",
    "docs/exts",
    "jwst/associations/tests/data",
    "scripts",
    ".tox",
    ".eggs",
    "build",
    "venv",
]
junit_family = "xunit2"
inputs_root = "jwst-pipeline"
results_root = "jwst-pipeline-results"
text_file_format = "rst"
doctest_plus = "enabled"
doctest_rst = "enabled"
addopts = [
    "-p no:legacypath",
    "--show-capture=no",
    "--report-crds-context",
    "--color=yes",
]
filterwarnings = [
    "error::ResourceWarning",
    "ignore:Models in math_functions:astropy.utils.exceptions.AstropyUserWarning",
]

[tool.coverage.run]
omit = [
    "jwst/conftest.py",
    "jwst/setup.py",
    "jwst/tests/test*",
    "jwst/regtest/test*",
    "jwst/*/tests/*",
    "docs/*",
    "*/jwst/conftest.py",
    "*/jwst/setup.py",
    "*/jwst/tests/test*",
    "*/jwst/regtest/test*",
    "*/jwst/*/tests/*",
    "*/docs/*",
    "*.rmap",
    "*.pmap",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if self.debug:",
    "except ImportError",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == '__main__':",
]
omit = [
    "*.rmap",
    "*.pmap",
]

[tool.setuptools_scm]
write_to = "jwst/_version.py"

[tool.ruff]
exclude = [
    "jwst/extern",
    "docs",
    ".tox",
    ".eggs",
    "build",
]
line-length = 130

lint.ignore = [
    "E741", # ambiguous variable name (O/0, l/I, etc.)
    "E722", # Do not use bare `except`
    "ANN101", # Missing type annotation for self in method
    "ANN102", # Missing type annotation for cls in classmethod
]

[tool.ruff.lint.per-file-ignores]
"jwst/**/__init__.py" = [
    "E402", # module-level import not at top of file
    "F401", # unused import
    "F403", # import with *
    "F405", # ambiguous import from *
]
"jwst/fits_generator/*" = [
    "F821", # undefined name
]
"jwst/fits_generator/tests/*" = [
    "F841", # unused variable
]
"jwst/associations/tests*" = [
    "F841", # unused variable
]
"jwst/ramp_fitting/tests/*" = [
    "E402", # module-level import not at top of file
]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disable_error_code = "import-untyped" # do not check imports
exclude = ["build"]

[[tool.mypy.overrides]]
# don't complain about the installed c parts of this library
module = [
    "jwst.cube_build.cube_match_internal",
    "jwst.cube_build.cube_match_sky_driz",
    "jwst.cube_build.cube_match_sky_pointcloud",
    "jwst.lib.winclip",
    "jwst.straylight.calc_xart",
]
ignore_missing_imports = true

[tool.towncrier]
filename = "CHANGES.rst"
directory = "changes"
package = "jwst"
title_format = "{version} ({project_date})"
ignore = [".gitkeep"]
wrap = true
issue_format = "`#{issue} <https://github.com/spacetelescope/jwst/issues/{issue}>`_"

[[tool.towncrier.type]]
directory = "general"
name = "General"
showcontent = true

[[tool.towncrier.type]]
directory = "docs"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "stpipe"
name = '``stpipe``'
showcontent = true

[[tool.towncrier.type]]
directory = "datamodels"
name = "Data Models"
showcontent = true

[[tool.towncrier.type]]
directory = "associations"
name = "Associations"
showcontent = true

[[tool.towncrier.type]]
directory = "scripts"
name = "Scripts"
showcontent = true

[[tool.towncrier.type]]
directory = "fits_generator"
name = "``fits_generator``"
showcontent = true

[[tool.towncrier.type]]
directory = "set_telescope_pointing"
name = '``set_telescope_pointing``'
showcontent = true

# pipeline

[[tool.towncrier.type]]
directory = "pipeline"
name = 'Pipeline'
showcontent = true

# steps

[[tool.towncrier.type]]
directory = "align_refs"
name = 'align_refs (coron3)'
showcontent = true

[[tool.towncrier.type]]
directory = "ami"
name = 'ami_analyze / ami_normalize / ami_average (ami3)'
showcontent = true

[[tool.towncrier.type]]
directory = "assign_mtwcs"
name = 'assign_mtwcs (image3, spec3)'
showcontent = true

[[tool.towncrier.type]]
directory = "assign_wcs"
name = 'assign_wcs (image2, spec2)'
showcontent = true

[[tool.towncrier.type]]
directory = "background"
name = 'background (image2, spec2)'
showcontent = true

[[tool.towncrier.type]]
directory = "badpix_selfcal"
name = 'badpix_selfcal (spec2)'
showcontent = true

[[tool.towncrier.type]]
directory = "barshadow"
name = 'barshadow (spec2 MOS)'
showcontent = true

[[tool.towncrier.type]]
directory = "charge_migration"
name = "charge_migration (detector1 NIR)"
showcontent = true

[[tool.towncrier.type]]
directory = "clean_flicker_noise"
name = "clean_flicker_noise (detector1)"
showcontent = true

[[tool.towncrier.type]]
directory = "combine_1d"
name = 'combine_1d (spec3)'
showcontent = true

[[tool.towncrier.type]]
directory = "cube_build"
name = 'cube_build (spec2 IFU, spec3)'
showcontent = true

[[tool.towncrier.type]]
directory = "cube_skymatch"
name = 'cube_skymatch'
showcontent = true

[[tool.towncrier.type]]
directory = "dark_current"
name = 'dark_current (detector1 NIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "dq_init"
name = 'dq_init (detector1)'
showcontent = true

[[tool.towncrier.type]]
directory = "emicorr"
name = 'emicorr (detector1 MIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "engdb_tools"
name = 'engdb_tools'
showcontent = true

[[tool.towncrier.type]]
directory = "exp_to_source"
name = 'exp_to_source (spec3)'
showcontent = true

[[tool.towncrier.type]]
directory = "extract_1d"
name = 'extract_1d (spec2, spec3)'
showcontent = true

[[tool.towncrier.type]]
directory = "extract_2d"
name = 'extract_2d (spec2 MOS)'
showcontent = true

[[tool.towncrier.type]]
directory = "firstframe"
name = 'firstframe (detector1 MIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "flatfield"
name = 'flatfield (image2, spec2)'
showcontent = true

[[tool.towncrier.type]]
directory = "fringe"
name = 'fringe (spec2 IFU)'
showcontent = true

[[tool.towncrier.type]]
directory = "gain_scale"
name = 'gain_scale (detector1 NIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "group_scale"
name = 'group_scale (detector1 NIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "guider_cds"
name = 'guider_cds (FGS)'
showcontent = true

[[tool.towncrier.type]]
directory = "imprint"
name = 'imprint (spec2 IFU, spec2 MOS)'
showcontent = true

[[tool.towncrier.type]]
directory = "ipc"
name = 'ipc (detector1)'
showcontent = true

[[tool.towncrier.type]]
directory = "jump"
name = 'jump (detector1)'
showcontent = true

[[tool.towncrier.type]]
directory = "klip"
name = "klip (coron3)"
showcontent = true

[[tool.towncrier.type]]
directory = "lastframe"
name = 'lastframe (detector1 MIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "linearity"
name = 'linearity (detector1)'
showcontent = true

[[tool.towncrier.type]]
directory = "master_background"
name = 'master_background (spec2 MOS, spec3)'
showcontent = true

[[tool.towncrier.type]]
directory = "mrs_imatch"
name = 'mrs_imatch (spec3)'
showcontent = true

[[tool.towncrier.type]]
directory = "msaflagopen"
name = 'msaflagopen (spec2 IFU, spec2 MOS)'
showcontent = true

[[tool.towncrier.type]]
directory = "nsclean"
name = "nsclean (spec2 IFU, spec2 MOS)"
showcontent = true

[[tool.towncrier.type]]
directory = "outlier_detection"
name = 'outlier_detection (image3, tso3, spec3, coron3)'
showcontent = true

[[tool.towncrier.type]]
directory = "pathloss"
name = 'pathloss (spec2 IFU, spec2 MOS)'
showcontent = true

[[tool.towncrier.type]]
directory = "persistence"
name = 'persistence (detector1 NIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "photom"
name = 'photom (image2, spec2)'
showcontent = true

[[tool.towncrier.type]]
directory = "pixel_replace"
name = 'pixel_replace (spec2 MOS)'
showcontent = true

[[tool.towncrier.type]]
directory = "ramp_fitting"
name = 'ramp_fitting (detector1)'
showcontent = true

[[tool.towncrier.type]]
directory = "refpix"
name = 'refpix (detector1)'
showcontent = true

[[tool.towncrier.type]]
directory = "resample"
name = 'resample (image2, image3, coron3)'
showcontent = true

[[tool.towncrier.type]]
directory = "resample_spec"
name = 'resample_spec (spec2 MOS, spec3)'
showcontent = true

[[tool.towncrier.type]]
directory = "reset"
name = 'reset (detector1 MIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "residual_fringe"
name = 'residual_fringe (spec2 IFU)'
showcontent = true

[[tool.towncrier.type]]
directory = "rscd"
name = 'rscd (detector1 MIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "saturation"
name = 'saturation (detector1)'
showcontent = true

[[tool.towncrier.type]]
directory = "skymatch"
name = 'skymatch (image3)'
showcontent = true

[[tool.towncrier.type]]
directory = "source_catalog"
name = 'source_catalog (image3)'
showcontent = true

[[tool.towncrier.type]]
directory = "spectral_leak"
name = "spectral_leak (spec3)"
showcontent = true

[[tool.towncrier.type]]
directory = "srctype"
name = 'srctype (spec2)'
showcontent = true

[[tool.towncrier.type]]
directory = "stack_refs"
name = "stack_refs (coron3)"
showcontent = true

[[tool.towncrier.type]]
directory = "straylight"
name = 'straylight (spec2 IFU)'
showcontent = true

[[tool.towncrier.type]]
directory = "superbias"
name = 'superbias (detector1 NIR)'
showcontent = true

[[tool.towncrier.type]]
directory = "tso_photometry"
name = 'tso_photometry (tso3)'
showcontent = true

[[tool.towncrier.type]]
directory = "tweakreg"
name = 'tweakreg (image3)'
showcontent = true

[[tool.towncrier.type]]
directory = "wavecorr"
name = 'wavecorr (spec2 MOS)'
showcontent = true

[[tool.towncrier.type]]
directory = "wfs_combine"
name = 'wfs_combine'
showcontent = true

[[tool.towncrier.type]]
directory = "wfss_contam"
name = 'wfss_contam (spec2 WFSS)'
showcontent = true

[[tool.towncrier.type]]
directory = "white_light"
name = 'white_light'
showcontent = true
