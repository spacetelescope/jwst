[tox]
envlist =
    check-{style,security,install}
    test{,-oldestdeps,-devdeps,-sdpdeps}{,-pyargs,-warnings,-regtests,-cov}
    build-{twine,docs}
isolated_build = true

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
description = check code style, e.g. with flake8
skip_install = true
deps =
    flake8
commands =
    flake8 . {posargs}

[testenv:check-security]
description = run bandit to check security compliance
deps =
    bandit>=1.7
commands =
    bandit -r -ll -x jwst/*test*,jwst/**/*test*,jwst/fits_generator jwst scripts

[testenv:check-install]
description = verify that install_requires in setup.cfg is correct
extras =
commands =
    verify_install_requires

[testenv]
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    sdpdeps: with the recent STScI DMS release pinned dependencies
    pyargs: with --pyargs on installed package
    warnings: treating warnings as errors
    regtests: with --bigdata and --slow flags
    cov: with coverage
# The following indicates which extras_require from setup.cfg will be installed
extras = test
# Pass through the following environment variables which may be needed for the CI
passenv =
    TOXENV
    CI
    CODECOV_*
    HOME
    CRDS_*
    STRICT_VALIDATION
    PASS_INVALID_VALUES
    VALIDATE_ON_ASSIGNMENT
    TEST_BIGDATA
usedevelop = true
commands =
    pip freeze
    pytest -n auto \
    cov: --cov=. --cov-config=setup.cfg --cov-report=term-missing --cov-report=xml \
    warnings: -W error \
    regtests: --bigdata --slow --basetemp={homedir}/test_outputs \
    {posargs}
deps =
    pytest-xdist
    devdeps: -rrequirements-dev.txt
    sdpdeps: -rrequirements-sdp.txt
setenv =
    sdpdeps,regtests: CRDS_CONTEXT = jwst-edit
commands_pre =
    python -m pip install --upgrade pip
# Generate a requirements-min.txt file
    oldestdeps: minimum_deps
# Force install everything in that file
    oldestdeps: pip install --ignore-installed -r requirements-min.txt
# Don't treat positional arguments passed to tox as file system paths
args_are_paths = false



[testenv:pyargs]
changedir = {homedir}
usedevelop = false
commands =
    pyargs: pytest -n auto {toxinidir}/docs --pyargs {posargs:jwst}

[testenv:build-twine]
description = check that the package builds sdist/wheel and that twine uploads
deps =
    twine>=3.3
    pep517
usedevelop = false
commands =
    python -m pep517.check .
    twine check --strict {distdir}/*

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build -W docs docs/_build
