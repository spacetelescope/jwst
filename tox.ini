[tox]
envlist =
    check-{dependencies,docs-links}
    py3{,11,12}{,-oldestdeps,-stdevdeps,-devdeps}{,-cov}{,-xdist}
requires =
    tox-uv

[testenv:check-dependencies]
description = verify that install_requires in setup.cfg has correct dependencies
# `extras` needs to be empty to check modules without additional dependencies
extras =
commands =
    python {toxinidir}/jwst/tests/test_import.py

[testenv:check-docs-links]
changedir = docs
description = validate links in HTML docs
extras = docs
commands =
    sphinx-build -W -b linkcheck . _build/html

[testenv]
# Run the tests in a temporary directory to make sure that we don't import
# jwst from the source tree
changedir = tmp/{envname}

description =
    run tests
    stdevdeps: with the latest developer version of upstream spacetelescope dependencies
    devdeps: with the latest developer version of upstream third-party dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: with coverage
    xdist: using parallel processing
pass_env =
    TOXENV
    CI
    CODECOV_*
    HOME
    CRDS_*
    STRICT_VALIDATION
    PASS_INVALID_VALUES
    VALIDATE_ON_ASSIGNMENT
    TEST_BIGDATA
extras =
    test
deps =
    xdist: pytest-xdist
uv_resolution =
    # The oldestdeps factor is intended to be used to install
    # the oldest versions of all dependencies
    oldestdeps: lowest-direct
commands_pre =
    stdevdeps: pip install -r {toxinidir}/requirements-dev-st.txt -U --upgrade-strategy eager
    devdeps: pip install -r {toxinidir}/requirements-dev-thirdparty.txt -U --upgrade-strategy eager
    pip freeze
commands =
    pytest {toxinidir}/docs --pyargs jwst \
    cov: --cov jwst --cov-config={toxinidir}/pyproject.toml --cov-report xml:{toxinidir}/coverage.xml --cov-report term-missing \
    xdist: -n auto \
    {posargs}
