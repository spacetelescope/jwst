name: Weekly cron

on:
  schedule:
    # Weekly Monday 6AM build
    - cron: "0 6 * * 1"
  workflow_dispatch:
    inputs:
      crds_context:
        type: string
        description: CRDS context(s) to use with tests (defaults to operational context)
        required: false

env:
  CRDS_SERVER_URL: https://jwst-crds.stsci.edu
  CRDS_PATH: $HOME/crds_cache
  CRDS_CLIENT_RETRY_COUNT: 3
  CRDS_CLIENT_RETRY_DELAY_SECONDS: 20

jobs:
  test_devdeps:
    name: run tests with the latest developer version of key dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python: [ 3.8, 3.9, '3.10' ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
        id: date
      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: test-devdeps-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}-${{ steps.date.outputs.date }}
      - run: pip install -e ".[test]" pytest-xdist
      - run: pip install -r requirements-dev.txt
      - run: pip freeze
      - run: echo "CRDS_CONTEXT=$(crds list --operational-context)" >> $GITHUB_ENV
        if: github.event.inputs.crds_context == ''
      - run: echo "CRDS_CONTEXT=${{ github.event.inputs.crds_context }}" >> $GITHUB_ENV
        if: github.event.inputs.crds_context != ''
      - uses: actions/cache@v3
        if: env.CRDS_CONTEXT != ''
        with:
          path: ${{ env.CRDS_PATH }}
          key: crds-${{ env.CRDS_CONTEXT }}
      - run: crds sync --contexts ${{ env.CRDS_CONTEXT }}
        if: env.CRDS_CONTEXT != ''
      - run: pytest -n auto