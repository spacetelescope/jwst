name: Weekly cron

on:
  schedule:
    # Weekly Monday 6AM build
    - cron: "0 6 * * 1"
  workflow_dispatch:

env:
  CRDS_SERVER_URL: https://jwst-crds.stsci.edu
  CRDS_PATH: ${HOME}/crds_cache
  CRDS_CLIENT_RETRY_COUNT: 3
  CRDS_CLIENT_RETRY_DELAY_SECONDS: 20

jobs:
  tox:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Dev dependencies in requirements-dev.txt
            os: ubuntu-latest
            python-version: 3.9
            toxenv: py39-devdeps
    steps:
      - name: Install system packages
        if: ${{ contains(matrix.toxenv,'docs') }}
        run: |
          sudo apt-get install graphviz texlive-latex-extra dvipng

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Get CRDS context
        if: ${{ contains(matrix.toxenv, 'py') }}
        id: crds-context
        run: |
          pip install crds
          echo "::set-output name=pmap::$(crds list --resolve-contexts --contexts | cut -f 1 -d ".")"

      - name: Restore CRDS cache
        if: ${{ contains(matrix.toxenv, 'py') }}
        uses: actions/cache@v2
        with:
          path: ${{ env.CRDS_PATH }}
          key: ${{ matrix.toxenv }}-crds-${{ steps.crds-context.outputs.pmap }}
          restore-keys: |
            ${{ matrix.toxenv }}-crds-jwst

      - name: Install tox
        run: |
          pip install tox

      - name: Run tests
        run: tox -e ${{ matrix.toxenv }}

      - name: Upload coverage to codecov
        if: ${{ contains(matrix.toxenv,'-cov') }}
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unit
