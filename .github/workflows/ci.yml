name: CI

on:
  push:
    branches:
      - master
      - '*x'
    tags:
      - '*'
  pull_request:
  schedule:
    # Weekly Monday 9AM build
    - cron: "0 9 * * 1"

env:
  CRDS_SERVER_URL: https://jwst-crds.stsci.edu
  CRDS_PATH: $HOME/crds_cache
  CRDS_CLIENT_RETRY_COUNT: 3
  CRDS_CLIENT_RETRY_DELAY_SECONDS: 20

jobs:
  check:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Code style check
            os: ubuntu-latest
            python-version: 3.9
            toxenv: check-style
          - name: Security audit
            os: ubuntu-latest
            python-version: 3.9
            toxenv: check-security
          - name: Verify install_requires in setup.py
            os: ubuntu-latest
            python-version: 3.9
            toxenv: check-install
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install tox
      - run: tox -e ${{ matrix.toxenv }}
  quick_test:
    name: test (Python ${{ matrix.python-version }}, tox testenv ${{ matrix.toxenv }}, ${{ matrix.os }})
    needs: [ check ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ '3.10' ]
        toxenv: [ test ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install tox
      - uses: actions/cache@v3
        with:
          path: ${{ env.CRDS_PATH }}
          key: crds-reference-files-${{ hashFiles(join([env.CRDS_PATH, 'references'], '/')) }}
      - run: tox -e ${{ matrix.toxenv }}
  test:
    name: test (Python ${{ matrix.python-version }}, tox testenv ${{ matrix.toxenv }}, ${{ matrix.os }})
    needs: [ quick_test ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
        toxenv: [ test-cov test-oldestdeps-cov, test-sdpdeps ]
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install tox
      - uses: actions/cache@v3
        with:
          path: ${{ env.CRDS_PATH }}
          key: crds-reference-files-${{ hashFiles(join([env.CRDS_PATH, 'references'], '/')) }}
      - run: tox -e ${{ matrix.toxenv }}
      - if: ${{ contains(matrix.toxenv,'-cov') }}
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unit
          fail_ci_if_error: true
  test_pyargs:
    name: test (Python ${{ matrix.python-version }}, tox testenv ${{ matrix.toxenv }}, ${{ matrix.os }})
    needs: [ quick_test ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ '3.10' ]
        toxenv: [ test-pyargs ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install tox
      - uses: actions/cache@v3
        with:
          path: ${{ env.CRDS_PATH }}
          key: crds-reference-files-${{ hashFiles(join([env.CRDS_PATH, 'references'], '/')) }}
      - run: tox -e ${{ matrix.toxenv }}
  build:
    name: build distribution (Python ${{ matrix.python-version }}, tox testenv ${{ matrix.toxenv }}, ${{ matrix.os }})
    needs: [ test ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]
        toxenv: [ build-twine ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install tox
      - run: tox -e ${{ matrix.toxenv }}